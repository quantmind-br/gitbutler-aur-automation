#!/bin/bash
"""
Script para configurar GitHub Actions para automa√ß√£o AUR
"""

set -euo pipefail

REPO_NAME="gitbutler-aur-automation"

echo "üöÄ Configurando GitHub Actions para GitButler AUR"
echo "=============================================="

# Verificar se git est√° configurado
if ! git config user.name >/dev/null 2>&1; then
    echo "‚ö†Ô∏è  Git n√£o configurado. Configurando..."
    read -p "Seu nome para commits: " git_name
    read -p "Seu email: " git_email
    git config --global user.name "$git_name"
    git config --global user.email "$git_email"
fi

# Verificar se tem GitHub CLI
if command -v gh &> /dev/null; then
    echo "‚úÖ GitHub CLI encontrado"

    # Autenticar se necess√°rio
    if ! gh auth status &> /dev/null; then
        echo "üîê Autenticando no GitHub..."
        gh auth login
    fi

    # Criar reposit√≥rio
    echo "üì¶ Criando reposit√≥rio no GitHub..."
    if gh repo create "$REPO_NAME" --public --source=. --remote=github --push; then
        echo "‚úÖ Reposit√≥rio criado e c√≥digo enviado!"
        REPO_URL=$(gh repo view --json url -q .url)
    else
        echo "‚ö†Ô∏è  Reposit√≥rio pode j√° existir. Tentando adicionar remote..."
        git remote add github "https://github.com/$(gh api user -q .login)/$REPO_NAME.git" || true
        git push -u github master
        REPO_URL="https://github.com/$(gh api user -q .login)/$REPO_NAME"
    fi

else
    echo "‚ùå GitHub CLI n√£o encontrado"
    echo "üìù Voc√™ precisa:"
    echo "   1. Ir para https://github.com/new"
    echo "   2. Nome: $REPO_NAME"
    echo "   3. P√∫blico: ‚úÖ"
    echo "   4. N√£o inicializar com README"
    echo ""
    read -p "Qual seu usu√°rio GitHub? " github_user
    REPO_URL="https://github.com/$github_user/$REPO_NAME"

    echo "üîó Adicionando remote..."
    git remote add github "$REPO_URL.git" || true

    echo "üì§ Enviando c√≥digo..."
    git push -u github master
fi

echo ""
echo "üîê CONFIGURAR SECRETS"
echo "===================="
echo ""
echo "Acesse: $REPO_URL/settings/secrets/actions"
echo ""
echo "1Ô∏è‚É£ Adicionar secret AUR_SSH_KEY:"
echo "   Nome: AUR_SSH_KEY"
echo "   Valor: (cole sua chave SSH privada abaixo)"
echo ""
echo "üìã Sua chave SSH privada:"
echo "------------------------"
cat ~/.ssh/id_ed25519
echo ""
echo "------------------------"
echo ""

# Verificar se h√° webhooks configurados
if [[ -f .env ]]; then
    echo "2Ô∏è‚É£ Secrets opcionais encontrados em .env:"
    while IFS= read -r line; do
        if [[ $line =~ ^([^=]+)=(.*)$ ]]; then
            key="${BASH_REMATCH[1]}"
            echo "   - $key (valor em .env)"
        fi
    done < .env
else
    echo "2Ô∏è‚É£ Secrets opcionais (se quiser notifica√ß√µes):"
    echo "   - DISCORD_WEBHOOK"
    echo "   - SLACK_WEBHOOK"
fi

echo ""
echo "‚ö° HABILITAR ACTIONS"
echo "==================="
echo ""
echo "1. Acesse: $REPO_URL/actions"
echo "2. Clique 'I understand my workflows, go ahead and enable them'"
echo "3. Verifique se 'Auto Update GitButler AUR' aparece"
echo ""

echo "üß™ TESTAR"
echo "========="
echo ""
echo "1. Actions ‚Üí Auto Update GitButler AUR ‚Üí Run workflow"
echo "2. Acompanhar logs em tempo real"
echo "3. Verificar se commit aparece no AUR"
echo ""

echo "üìä MONITORAR"
echo "============"
echo ""
echo "- Workflow: $REPO_URL/actions"
echo "- AUR: https://aur.archlinux.org/packages/gitbutler-appimage"
echo "- Logs: Executam a cada 6 horas automaticamente"
echo ""

echo "‚úÖ Configura√ß√£o GitHub conclu√≠da!"
echo ""
echo "üìã Pr√≥ximos passos:"
echo "   1. Configurar secrets (obrigat√≥rio)"
echo "   2. Habilitar Actions (obrigat√≥rio)"
echo "   3. Testar workflow (recomendado)"
echo "   4. Configurar webhooks (opcional)"