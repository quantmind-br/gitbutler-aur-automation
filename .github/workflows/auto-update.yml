name: Auto Update GitButler AUR

on:
  schedule:
    - cron: '0 */1 * * *'
  workflow_dispatch:
  repository_dispatch:
    types: [update-check]

env:
  AUR_REPO_NAME: gitbutler-appimage
  UPSTREAM_REPO: gitbutlerapp/gitbutler

jobs:
  check-and-update:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Set up SSH for AUR
        env:
          AUR_SSH_KEY: ${{ secrets.AUR_SSH_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$AUR_SSH_KEY" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan aur.archlinux.org >> ~/.ssh/known_hosts

          cat >> ~/.ssh/config << 'EOF'
          Host aur.archlinux.org
            HostName aur.archlinux.org
            User aur
            IdentityFile ~/.ssh/id_ed25519
            IdentitiesOnly yes
          EOF

      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"

      - name: Check for updates
        id: check_updates
        run: |
          echo "Checking for GitButler updates..."

          if ! python3 check_updates.py; then
            echo "Error checking updates"
            exit 1
          fi

          if ! git diff --quiet PKGBUILD .SRCINFO 2>/dev/null; then
            echo "updated=true" >> $GITHUB_OUTPUT
            NEW_VERSION=$(grep '^pkgver=' PKGBUILD | cut -d= -f2)
            echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT
            echo "New version found: $NEW_VERSION"
          else
            echo "updated=false" >> $GITHUB_OUTPUT
            echo "No updates needed"
          fi

      - name: Test SSH connection
        if: steps.check_updates.outputs.updated == 'true'
        run: |
          echo "Testing SSH connection to AUR..."
          ssh -T aur@aur.archlinux.org || echo "SSH connection test completed"

      - name: Clone AUR repository
        if: steps.check_updates.outputs.updated == 'true'
        run: |
          echo "Cloning AUR repository..."
          git clone ssh://aur@aur.archlinux.org/${{ env.AUR_REPO_NAME }}.git aur-repo

          cd aur-repo
          cp ../PKGBUILD .
          cp ../.SRCINFO .
          cp ../gitbutler-appimage.install .

      - name: Validate PKGBUILD
        if: steps.check_updates.outputs.updated == 'true'
        run: |
          cd aur-repo

          if ! grep -q "pkgver=${{ steps.check_updates.outputs.version }}" PKGBUILD; then
            echo "ERROR: Version mismatch in PKGBUILD"
            exit 1
          fi

          echo "PKGBUILD validation successful"

      - name: Commit and push to AUR
        if: steps.check_updates.outputs.updated == 'true'
        run: |
          cd aur-repo

          git add PKGBUILD .SRCINFO gitbutler-appimage.install
          git commit -m "Update GitButler to v${{ steps.check_updates.outputs.version }}

          Automated update via GitHub Actions
          ü§ñ Generated automatically"

          git push

      - name: Send Discord notification
        if: steps.check_updates.outputs.updated == 'true' && secrets.DISCORD_WEBHOOK != null
        run: |
          curl -H "Content-Type: application/json" \
               -X POST \
               -d '{
                 "content": "üöÄ **GitButler AUR Updated!**\n\n**Version**: ${{ steps.check_updates.outputs.version }}\n**Install**: `yay -S gitbutler-appimage`\n**AUR**: https://aur.archlinux.org/packages/gitbutler-appimage",
                 "username": "AUR Bot"
               }' \
               "${{ secrets.DISCORD_WEBHOOK }}"

      - name: Update repository
        if: steps.check_updates.outputs.updated == 'true'
        run: |
          cp aur-repo/PKGBUILD .
          cp aur-repo/.SRCINFO .

          git add PKGBUILD .SRCINFO
          git commit -m "Update to v${{ steps.check_updates.outputs.version }}" || true
          git push || true

  notify-failure:
    runs-on: ubuntu-latest
    needs: check-and-update
    if: failure()

    steps:
      - name: Notify about failure
        if: secrets.DISCORD_WEBHOOK != null
        run: |
          curl -H "Content-Type: application/json" \
               -X POST \
               -d '{
                 "content": "‚ùå **GitButler AUR Update Failed**\n\nCheck the GitHub Actions logs for details.\n[View Logs](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})",
                 "username": "AUR Bot"
               }' \
               "${{ secrets.DISCORD_WEBHOOK }}"